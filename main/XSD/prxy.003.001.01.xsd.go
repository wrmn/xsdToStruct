// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"time"
)

// AddressType2Code ...
type AddressType2Code string

// BICFIIdentifier ...
type BICFIIdentifier string

// BranchAndFinancialInstitutionIdentification5 is x
type BranchAndFinancialInstitutionIdentification5 struct {
	FinInstnId *FinancialInstitutionIdentification8 `xml:"FinInstnId"`
	BrnchId    *BranchData2                         `xml:"BrnchId"`
}

// BranchData2 ...
type BranchData2 struct {
	Id      string          `xml:"Id"`
	Nm      string          `xml:"Nm"`
	PstlAdr *PostalAddress6 `xml:"PstlAdr"`
}

// CashAccountType2ChoiceProxy ...
type CashAccountType2ChoiceProxy struct {
	Prtry string `xml:"Prtry"`
}

// ClearingSystemMemberIdentification2 ...
type ClearingSystemMemberIdentification2 struct {
	BICFI string `xml:"BICFI"`
}

// CountryCode ...
type CountryCode string

// Document is x
type Document struct {
	PrxyLookUp *ProxyLookUpV01 `xml:"PrxyLookUp"`
}

// ExternalFinancialInstitutionIdentification1Code ...
type ExternalFinancialInstitutionIdentification1Code string

// FinancialIdentificationSchemeName1Choice ...
type FinancialIdentificationSchemeName1Choice struct {
	Cd    string `xml:"Cd"`
	Prtry string `xml:"Prtry"`
}

// FinancialInstitutionIdentification8 is x
type FinancialInstitutionIdentification8 struct {
	BICFI       string                               `xml:"BICFI"`
	ClrSysMmbId *ClearingSystemMemberIdentification2 `xml:"ClrSysMmbId"`
	Nm          string                               `xml:"Nm"`
	PstlAdr     *PostalAddress6                      `xml:"PstlAdr"`
	Othr        *GenericFinancialIdentification1     `xml:"Othr"`
}

// GenericFinancialIdentification1 is x
type GenericFinancialIdentification1 struct {
	Id      string                                    `xml:"Id"`
	SchmeNm *FinancialIdentificationSchemeName1Choice `xml:"SchmeNm"`
	Issr    string                                    `xml:"Issr"`
}

// GroupHeader69 is Submitter type info group
type GroupHeader69 struct {
	MsgId       string                `xml:"MsgId"`
	CreDtTm     time.Time             `xml:"CreDtTm"`
	MsgSndr     *Party12Choice        `xml:"MsgSndr"`
	TpOfSubmitr *SubmitterType1Choice `xml:"TpOfSubmitr"`
}

// ISODateTime ...
type ISODateTime time.Time

// Max12Text ...
type Max12Text string

// Max140Text ...
type Max140Text string

// Max16Text ...
type Max16Text string

// Max35Text ...
type Max35Text string

// Max70Text ...
type Max70Text string

// Min11Max11Text ...
type Min11Max11Text string

// Party12Choice is x
type Party12Choice struct {
	Agt *BranchAndFinancialInstitutionIdentification5 `xml:"Agt"`
}

// PostalAddress6 ...
type PostalAddress6 struct {
	AdrTp       string   `xml:"AdrTp"`
	Dept        string   `xml:"Dept"`
	SubDept     string   `xml:"SubDept"`
	StrtNm      string   `xml:"StrtNm"`
	BldgNb      string   `xml:"BldgNb"`
	PstCd       string   `xml:"PstCd"`
	TwnNm       string   `xml:"TwnNm"`
	CtrySubDvsn string   `xml:"CtrySubDvsn"`
	Ctry        string   `xml:"Ctry"`
	AdrLine     []string `xml:"AdrLine"`
}

// ProxyAccountType ...
type ProxyAccountType string

// ProxyDefinition1 is Validate phone number as 62\d+ (62xxxx...), Validate email address as [^@]+@[^@]+] (xxxx@xxxx)
type ProxyDefinition1 struct {
	Tp  string `xml:"Tp"`
	Val string `xml:"Val"`
}

// ProxyLookUp11 is x
type ProxyLookUp11 struct {
	LkUpTp    string                       `xml:"LkUpTp"`
	Id        string                       `xml:"Id"`
	PrxyRtrvl *ProxyDefinition1            `xml:"PrxyRtrvl"`
	PrxyRqstr *ProxyDefinition1            `xml:"PrxyRqstr"`
	DsplNm    string                       `xml:"DsplNm"`
	AcctTp    *CashAccountType2ChoiceProxy `xml:"AcctTp"`
}

// ProxyLookUpChoice1 is x
type ProxyLookUpChoice1 struct {
	PrxyOnly *ProxyLookUp11 `xml:"PrxyOnly"`
}

// ProxyLookUpType1Code ...
type ProxyLookUpType1Code string

// ProxyLookUpV01 is x
type ProxyLookUpV01 struct {
	GrpHdr *GroupHeader69      `xml:"GrpHdr"`
	LookUp *ProxyLookUpChoice1 `xml:"LookUp"`
}

// SubmitterType1Choice is Submitter type code [BANK, CNTR] for Bank or Non-Bank
type SubmitterType1Choice struct {
	Cd string `xml:"Cd"`
}

// SubmitterType1Code ...
type SubmitterType1Code string
